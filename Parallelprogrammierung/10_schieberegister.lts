const N = 4	// Anzahl der internen Speicherzellen
range ID = 0..N-1	// ID
Speicher = (rein -> raus -> Speicher).	// Prozess Speicher
||SCHIEBER = forall [i:ID] a[i]:Speicher.	// Parallele Komposition der Speicherzellen. Es werden vom Prozess Speicher vier Instanzen erzeugt, jeweils mit einem Label-Präfix a[i] versetzt.
SCHIEBEREGISTER = SCHIEBER
    /{  rein/a[0].rein,	// Äußere Eingabe mit der ersten Zelle verbinden
        raus/a[N-1].raus,	// Äußere Ausgabe mit der letzten Zelle verbinden
		a[0].raus/a[1].rein,	// Verbindung von Zelle 0 zu Zelle 1
		a[1].raus/a[2].rein,	// Verbindung von Zelle 1 zu Zelle 2
		a[2].raus/a[3].rein		// Verbindung von Zelle 2 zu Zelle 3
     }.
// Jede Speicherzelle im Schieberegister ist eine Instanz des gegebenenen Prozesses Speicher, der das Verhalten einer einzelnen Speicherzelle modelliert.
// Durch die parallele Komposition von vier Speicherzellen haben wir ein Schieberegister mit vier internen Speicherzellen erstellt.
// Das Schieberegister besitzt nach außen nur die Aktionen rein als Eingabe und raus als Ausgabe wie in der Aufgabenstellung gefordert
// Die Daten werden intern von einer Zelle zur nächsten weiterverschoben, indem die raus-Aktion einer Zelle mit der rein-Aktion der nächsten Zelle verbunden wird.
// Das Modell kann durch ein Strukturdiagramm dargestellt werden, in dem die vier Speicherzellen in Reihe geschaltet sind
// und die Daten von der ersten zur letzten Zelle wandern.